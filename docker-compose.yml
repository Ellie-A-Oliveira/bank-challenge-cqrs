version: '1'

services:
  axon-server:
    image: axoniq/axonserver
    container_name: axon-server
    hostname: axon-server
    ports:
      - "8024:8024"
      - "8124:8124"
      - "8224:8224"
    volumes:
      - axonserver-data:/data
      - axonserver-events:/eventdata
      - axonserver-config:/config:ro
    environment:
      - AXONIQ_RECOVERY=true
      - AXONIQ_AXONSERVER_STANDALONE=true
    networks:
      - axon-network

  postgres:
    image: postgres:15
    container_name: postgres
    hostname: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: bank
      POSTGRES_USER: bankuser
      POSTGRES_PASSWORD: bankpass
    networks:
      - axon-network
    volumes:
      - postgres-data:/var/lib/postgresql/data

  redis:
    image: redis:latest
    container_name: redis
    hostname: redis
    ports:
      - "6379:6379"
    networks:
      - axon-network

  spring-app:
    build: .
    container_name: spring-boot-app
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - AXON_SERVER_URL=axon-server
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=bank
      - POSTGRES_USER=bankuser
      - POSTGRES_PASSWORD=bankpass
    depends_on:
      - axon-server
      - redis
      - postgres
    networks:
      - axon-network

volumes:
  axonserver-data:
  axonserver-events:
  axonserver-config:
  postgres-data:

networks:
  axon-network:
    driver: bridge